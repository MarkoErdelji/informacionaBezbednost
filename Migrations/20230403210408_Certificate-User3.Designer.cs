// <auto-generated />
using System;
using IB_projekat;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IB_projekat.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230403210408_Certificate-User3")]
    partial class CertificateUser3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("IB_projekat.Certificates.Model.Certificate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AuthenticatedUserId")
                        .HasColumnType("integer");

                    b.Property<int>("CertificateType")
                        .HasColumnType("integer");

                    b.Property<string>("Issuer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SignatureAlgorithm")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AuthenticatedUserId");

                    b.ToTable("Certificates");
                });

            modelBuilder.Entity("IB_projekat.Users.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("UserType").HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("IB_projekat.Users.Model.AuthenticatedUser", b =>
                {
                    b.HasBaseType("IB_projekat.Users.Model.User");

                    b.HasDiscriminator().HasValue("Authorized");
                });

            modelBuilder.Entity("IB_projekat.Users.Model.UnauthenticatedUser", b =>
                {
                    b.HasBaseType("IB_projekat.Users.Model.User");

                    b.HasDiscriminator().HasValue("Unauthorized");
                });

            modelBuilder.Entity("IB_projekat.Users.Model.Admin", b =>
                {
                    b.HasBaseType("IB_projekat.Users.Model.AuthenticatedUser");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("IB_projekat.Certificates.Model.Certificate", b =>
                {
                    b.HasOne("IB_projekat.Users.Model.AuthenticatedUser", null)
                        .WithMany("Certificates")
                        .HasForeignKey("AuthenticatedUserId");
                });

            modelBuilder.Entity("IB_projekat.Users.Model.AuthenticatedUser", b =>
                {
                    b.Navigation("Certificates");
                });
#pragma warning restore 612, 618
        }
    }
}
